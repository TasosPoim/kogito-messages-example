%prod.quarkus.swagger-ui.always-include=true

quarkus.http.port=9100
quarkus.http.test-port=8100

quarkus.http.root-path=/sonata

################## PROMETHEUS METRICS ##################
quarkus.micrometer.export.json.enabled=true
quarkus.micrometer.export.prometheus.path=metrics/prometheus
quarkus.micrometer.export.json.path=metrics/json

################## Common ##################


#QUARKUS DEV SETUP
%dev.quarkus.log.console.json=true

%dev.quarkus.log.console.enable=true
%dev.quarkus.log.console.level=DEBUG
%dev.quarkus.log.console.darken=1

### uncomment this property in order to work locally with kafka docker
%dev.kafka.bootstrap.servers=localhost:19092

%dev.quarkus.rest-client.sonata-api.url=http://localhost:9100/sonata/
%dev.quarkus.rest-client.sonata-api.scope=jakarta.inject.Singleton

%unittest.quarkus.rest-client.sonata-api.url=http://localhost:8100/sonata/
%unittest.quarkus.rest-client.sonata-api.scope=jakarta.inject.Singleton

%test.quarkus.rest-client.sonata-api.url=http://localhost:8100/sonata/
%test.quarkus.rest-client.sonata-api.scope=jakarta.inject.Singleton
################## Prod Environment ##################

%prod.quarkus.devservices.enabled=false

### The Kafka broker location
%prod.kafka.bootstrap.servers=tmf-services_kafka:9092

%prod.quarkus.rest-client.sonata-api.url=http://localhost:9100/sonata-api
%prod.quarkus.rest-client.sonata-api.scope=jakarta.inject.Singleton

# Connection config for the Infinispan server
%prod.quarkus.infinispan-client.hosts=infinispan:11222
%prod.quarkus.infinispan-client.auth-server-name=infinispan
%prod.quarkus.infinispan-client.username=infinispan
%prod.quarkus.infinispan-client.password=infinispan
%prod.quarkus.infinispan-client.auth-realm=default
%prod.quarkus.infinispan-client.client-intelligence=BASIC

#%prod.mp.messaging.incoming.svc-order-in.auto.offset.reset=earliest

# CHANNEL CONFIGURATION

# Configuring the outgoing channel (posting to Helm Engine) for the service activation/deactivation
mp.messaging.outgoing.helm-engine-activation.connector=smallrye-kafka
mp.messaging.outgoing.helm-engine-activation.topic=helm-engine-activation
mp.messaging.outgoing.helm-engine-activation.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring the incoming channel to get Helm Result for the service activation/deactivation
mp.messaging.incoming.helm-engine-activation-result.connector=smallrye-kafka
mp.messaging.incoming.helm-engine-activation-result.topic=helm-engine-activation-result
mp.messaging.incoming.helm-engine-activation-result.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the incoming channel (reading from Kafka) from TMF api, service activation
mp.messaging.incoming.tmf-service-activation.connector=smallrye-kafka
mp.messaging.incoming.tmf-service-activation.topic=tmf-service-activation
mp.messaging.incoming.tmf-service-activation.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# configuration for built-in kogito messages
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processinstances-events.auto.offset.reset=earliest
mp.messaging.outgoing.kogito-processinstances-events.group.id=kogito-kafka-multi

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-usertaskinstances-events.auto.offset.reset=earliest
mp.messaging.outgoing.kogito-usertaskinstances-events.group.id=kogito-kafka-multi

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-variables-events.auto.offset.reset=earliest
mp.messaging.outgoing.kogito-variables-events.group.id=kogito-kafka-multi

mp.messaging.outgoing.kogito-processdefinitions-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processdefinitions-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processdefinitions-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito-processdefinitions-events.auto.offset.reset=earliest
mp.messaging.outgoing.kogito-processdefinitions-events.group.id=kogito-kafka-multi

